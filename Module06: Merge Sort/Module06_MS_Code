#include <iostream>
using namespace std;

void merge(int *arr, int low, int high, int mid) {
    int n1 = mid - low + 1;
    int n2 = high - mid;

    // Create temporary arrays
    int left[n1], right[n2];

    // Copy data to temporary arrays left[] and right[]
    for (int i = 0; i < n1; i++)
        left[i] = arr[low + i];
    for (int j = 0; j < n2; j++)
        right[j] = arr[mid + 1 + j];

    // Merge the temporary arrays back into arr[low..high]
    int i = 0, j = 0, k = low;
    while (i < n1 && j < n2) {
        if (left[i] <= right[j]) {
            arr[k] = left[i];
            i++;
        } else {
            arr[k] = right[j];
            j++;
        }
        k++;
    }

    // Copy the remaining elements of left[], if there are any
    while (i < n1) {
        arr[k] = left[i];
        i++;
        k++;
    }

    // Copy the remaining elements of right[], if there are any
    while (j < n2) {
        arr[k] = right[j];
        j++;
        k++;
    }
}

void mergeSort(int *arr, int low, int high) {
    if (low < high) {
        int mid = (low + high) / 2;
        // Split the data into two halves.
        mergeSort(arr, low, mid);
        mergeSort(arr, mid + 1, high);

        // Merge them to get sorted output.
        merge(arr, low, high, mid);
    }
}

int main() {
    int n;
    cout << "Enter the size of an array:";
    cin >> n;
    if (n > 0) {
        int arr[n];
        cout << "Enter the elements:";
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }

        mergeSort(arr, 0, n - 1);

        // Print the given array
        cout << "Given array is" << endl;
        for (int i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;

        // Print the sorted array
        cout << "The sorted array is" << endl;
        for (int i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    } else {
        // Invalid array size
        cout << "Invalid array size" << endl;
    }

    return 0;
}
