#include<iostream>
using namespace std;

class Node {
public:
    int data;
    Node *next;
};

class LinkedList {
public:
    Node *head;
    LinkedList() {
        head = NULL;
    }
    void append(int value);
    void deleteAllOccurrences(int key);
    void display();
};

void LinkedList::append(int value) {
    Node *newNode = new Node;
    newNode->data = value;
    newNode->next = NULL;

    if (head == NULL) {
        head = newNode;
    }
    else {
        Node *current = head;
        while (current->next != NULL) {
            current = current->next;
        }
        current->next = newNode;
    }
}

void LinkedList::deleteAllOccurrences(int key) {
    Node *current = head;
    Node *previous = head;

    while (current != NULL) {
        if (current->data == key && current == head) {
            head = current->next;
            delete current;
            current = head;
        }
        else if (current->data == key) {
            previous->next = current->next;
            delete current;
            current = previous->next;
        }
        else {
            previous = current;
            current = current->next;
        }
    }

    this->display();
}

void LinkedList::display() {
    Node *temp = head;
    cout << "\nThe list after deletion: ";
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
}

int main() {
    cout << "\nEnter the size of the list: ";
    int N, value;
    LinkedList lst;
    cin >> N;
    for (int i = 0; i < N; i++) {
        cin >> value;
        lst.append(value);
    }
    cout << "\nEnter the element to be deleted: ";
    int delValue;
    cin >> delValue;

    // Write your code here for deleting and displaying the elements in the list
    lst.deleteAllOccurrences(delValue);

    return 0;
}
