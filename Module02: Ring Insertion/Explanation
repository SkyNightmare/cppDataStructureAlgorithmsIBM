Assume that you have a curtain rod and many rings. Each ring has a number printed on it. You need to insert the curtain rings into the rod one at a time. The user has to provide you with the ring number that needs to be inserted into the rod. When you get a number from the user, you need to insert the rings. The rings must be inserted from the left side of the rod and after inserting all the rings, display the ring numbers in the rod one by one.

Implement this scenario using the data structure : Linked List.


Note:
Observe the highlighted output statements in the sample input and output statements for more clarifications.
Do not change the code template given.  Write your code in the provided places alone.
Avoid the usage of exit(0) in your code.  

Sample input statement:
Enter the ring number:
56
Do you want to add another ring? Enter y/n
y
Enter the ring number:
12
Do you want to add another ring? Enter y/n
y
Enter the ring number:
90
Do you want to add another ring? Enter y/n
y
Enter the ring number:
45
Do you want to add another ring? Enter y/n
y
Enter the ring number:
89
Do you want to add another ring? Enter y/n
n

 
Sample output statement:
The ring numbers in the rod are:
89 45 90 12 56

Explanation:

1.Node Class:
This class defines a basic node structure for a linked list. Each node has an integer data value and a pointer to the next node in the list.

2.LinkedList Class:
This class represents a linked list. It has a head pointer (points to the first node) and a tail pointer (usually used for optimization in more complex operations, but not used in this code).
The constructor initializes the head to NULL.
It has two member functions, insertAtFront for adding a node to the front of the list and display for printing the elements of the list.

3.insertAtFront Function:
This function creates a new node, sets its data to the provided value, and makes it the new head of the list. The new node points to the previous head.

4.display Function:
This function traverses the linked list from the head to the end, printing the data of each node.

5.main Function:
In the main function, a loop allows the user to input ring numbers, which are added to the front of the linked list using insertAtFront.
The loop continues until the user enters 'n'.
Finally, the contents of the linked list are displayed using the display function.
